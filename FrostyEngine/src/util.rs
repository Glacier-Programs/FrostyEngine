use winit::event::VirtualKeyCode;
use wgpu;

/*
pub(crate) fn create_render_pipeline(device: &wgpu::Device, layout: &wgpu::PipelineLayout, shader: ProtoShader, config: &wgpu::SurfaceConfiguration, vertex_buffers: &[wgpu::VertexBufferLayout]) -> wgpu::RenderPipeline{
    let (vertex_entry, fragment_entry) = shader.get_entrances();
    device.create_render_pipeline(
        &wgpu::RenderPipelineDescriptor{
            label: Some("Render Pipeline"),
            layout: Some(&layout),
            vertex: wgpu::VertexState {
                module: shader.get_module(),
                entry_point: vertex_entry,
                buffers: vertex_buffers,
            },
            fragment: Some(wgpu::FragmentState {
                module: &shader.get_module(),
                entry_point: fragment_entry,
                targets: &[Some(wgpu::ColorTargetState {
                    format: config.format,
                    blend: Some(wgpu::BlendState::REPLACE),
                    write_mask: wgpu::ColorWrites::ALL,
                })],
            }),
            primitive: wgpu::PrimitiveState {
                topology: wgpu::PrimitiveTopology::TriangleList,
                strip_index_format: None,
                front_face: wgpu::FrontFace::Ccw, // draw counter clockwise 
                cull_mode: Some(wgpu::Face::Back), // don't draw backs
                // Setting this to anything other than Fill requires Features::NON_FILL_POLYGON_MODE
                polygon_mode: wgpu::PolygonMode::Fill,
                // Requires Features::DEPTH_CLIP_CONTROL
                unclipped_depth: false,
                // Requires Features::CONSERVATIVE_RASTERIZATION
                conservative: false,
            },
            depth_stencil: None, // uneeded since graphics are only 2d
            multisample: wgpu::MultisampleState {
                count: 1,
                mask: !0,
                alpha_to_coverage_enabled: false,
            },
            multiview: None,
        }
    )
}
*/

pub(crate) const VIRTUALKEYS: [VirtualKeyCode; 134] = [
    VirtualKeyCode::Key1,
    VirtualKeyCode::Key2,
    VirtualKeyCode::Key3,
    VirtualKeyCode::Key4,
    VirtualKeyCode::Key5,
    VirtualKeyCode::Key6,
    VirtualKeyCode::Key7,
    VirtualKeyCode::Key8,
    VirtualKeyCode::Key9,
    VirtualKeyCode::Key0,
    VirtualKeyCode::A,
    VirtualKeyCode::B,
    VirtualKeyCode::C,
    VirtualKeyCode::D,
    VirtualKeyCode::E,
    VirtualKeyCode::F,
    VirtualKeyCode::G,
    VirtualKeyCode::H,
    VirtualKeyCode::I,
    VirtualKeyCode::J,
    VirtualKeyCode::K,
    VirtualKeyCode::L,
    VirtualKeyCode::M,
    VirtualKeyCode::N,
    VirtualKeyCode::O,
    VirtualKeyCode::P,
    VirtualKeyCode::Q,
    VirtualKeyCode::R,
    VirtualKeyCode::S,
    VirtualKeyCode::T,
    VirtualKeyCode::U,
    VirtualKeyCode::V,
    VirtualKeyCode::W,
    VirtualKeyCode::X,
    VirtualKeyCode::Y,
    VirtualKeyCode::Z,
    VirtualKeyCode::Escape,
    VirtualKeyCode::F1,
    VirtualKeyCode::F2,
    VirtualKeyCode::F3,
    VirtualKeyCode::F4,
    VirtualKeyCode::F5,
    VirtualKeyCode::F6,
    VirtualKeyCode::F7,
    VirtualKeyCode::F8,
    VirtualKeyCode::F9,
    VirtualKeyCode::F10,
    VirtualKeyCode::F11,
    VirtualKeyCode::F12,
    VirtualKeyCode::F13,
    VirtualKeyCode::F14,
    VirtualKeyCode::F15,
    VirtualKeyCode::Snapshot,
    VirtualKeyCode::Scroll,
    VirtualKeyCode::Pause,
    VirtualKeyCode::Insert,
    VirtualKeyCode::Home,
    VirtualKeyCode::Delete,
    VirtualKeyCode::End,
    VirtualKeyCode::PageDown,
    VirtualKeyCode::PageUp,
    VirtualKeyCode::Left,
    VirtualKeyCode::Up,
    VirtualKeyCode::Right,
    VirtualKeyCode::Down,
    VirtualKeyCode::Back,
    VirtualKeyCode::Return,
    VirtualKeyCode::Space,
    VirtualKeyCode::Numlock,
    VirtualKeyCode::Numpad0,
    VirtualKeyCode::Numpad1,
    VirtualKeyCode::Numpad2,
    VirtualKeyCode::Numpad3,
    VirtualKeyCode::Numpad4,
    VirtualKeyCode::Numpad5,
    VirtualKeyCode::Numpad6,
    VirtualKeyCode::Numpad7,
    VirtualKeyCode::Numpad8,
    VirtualKeyCode::Numpad9,
    VirtualKeyCode::AbntC1,
    VirtualKeyCode::AbntC2,
    VirtualKeyCode::Apostrophe,
    VirtualKeyCode::Apps,
    VirtualKeyCode::At,
    VirtualKeyCode::Ax,
    VirtualKeyCode::Backslash,
    VirtualKeyCode::Calculator,
    VirtualKeyCode::Capital,
    VirtualKeyCode::Colon,
    VirtualKeyCode::Comma,
    VirtualKeyCode::Convert,
    VirtualKeyCode::Equals,
    VirtualKeyCode::Grave,
    VirtualKeyCode::Kana,
    VirtualKeyCode::Kanji,
    VirtualKeyCode::LAlt,
    VirtualKeyCode::LBracket,
    VirtualKeyCode::LControl,
    VirtualKeyCode::LShift,
    VirtualKeyCode::LWin,
    VirtualKeyCode::Mail,
    VirtualKeyCode::MediaSelect,
    VirtualKeyCode::MediaStop,
    VirtualKeyCode::Minus,
    VirtualKeyCode::Mute,
    VirtualKeyCode::MyComputer,
    VirtualKeyCode::NavigateForward,
    VirtualKeyCode::NavigateBackward,
    VirtualKeyCode::NextTrack,
    VirtualKeyCode::NoConvert,
    VirtualKeyCode::NumpadComma,
    VirtualKeyCode::NumpadEnter,
    VirtualKeyCode::NumpadEquals,
    VirtualKeyCode::OEM102,
    VirtualKeyCode::Period,
    VirtualKeyCode::PlayPause,
    VirtualKeyCode::Power,
    VirtualKeyCode::PrevTrack,
    VirtualKeyCode::RAlt,
    VirtualKeyCode::RBracket,
    VirtualKeyCode::RControl,
    VirtualKeyCode::RShift,
    VirtualKeyCode::RWin,
    VirtualKeyCode::Semicolon,
    VirtualKeyCode::Slash,
    VirtualKeyCode::Sleep,
    VirtualKeyCode::Stop,
    VirtualKeyCode::Sysrq,
    VirtualKeyCode::Tab,
    VirtualKeyCode::Underline,
    VirtualKeyCode::Unlabeled,
    VirtualKeyCode::VolumeDown,
    VirtualKeyCode::VolumeUp,
    VirtualKeyCode::Wake,
];